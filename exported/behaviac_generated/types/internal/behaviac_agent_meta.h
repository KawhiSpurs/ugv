// ---------------------------------------------------------------------
// THIS FILE IS AUTO-GENERATED BY BEHAVIAC DESIGNER, SO PLEASE DON'T MODIFY IT BY YOURSELF!
// ---------------------------------------------------------------------

#ifndef _BEHAVIAC_AGENT_PROPERTIES_H_
#define _BEHAVIAC_AGENT_PROPERTIES_H_

#include "behaviac_agent_headers.h"
#include "behaviac_agent_member_visitor.h"
#include "behaviac_customized_types.h"

namespace behaviac
{
	// ---------------------------------------------------------------------
	// Delegate methods
	// ---------------------------------------------------------------------

	inline void FunctionPointer_behaviac_Agent_LogMessage(char* param0) { behaviac::Agent::LogMessage(param0); }

	inline void Set_Agent_Dominant_currentLane(Agent* self, LaneIdx value) { ((Agent_Dominant*)self)->_Get_Property_<PROPERTY_TYPE_Agent_Dominant_currentLane, LaneIdx >() = value; };
	inline const void* Get_Agent_Dominant_currentLane(Agent* self) { return &((Agent_Dominant*)self)->_Get_Property_<PROPERTY_TYPE_Agent_Dominant_currentLane, LaneIdx >(); };

	inline void Set_Agent_Dominant_currentState(Agent* self, DriveState value) { ((Agent_Dominant*)self)->_Get_Property_<PROPERTY_TYPE_Agent_Dominant_currentState, DriveState >() = value; };
	inline const void* Get_Agent_Dominant_currentState(Agent* self) { return &((Agent_Dominant*)self)->_Get_Property_<PROPERTY_TYPE_Agent_Dominant_currentState, DriveState >(); };

	inline void Set_Agent_Dominant_environment(Agent* self, Plan_Frame value) { ((Agent_Dominant*)self)->environment = value; };
	inline const void* Get_Agent_Dominant_environment(Agent* self) { return &((Agent_Dominant*)self)->environment; };

	inline void Set_Agent_Dominant_lastState(Agent* self, DriveState value) { ((Agent_Dominant*)self)->_Get_Property_<PROPERTY_TYPE_Agent_Dominant_lastState, DriveState >() = value; };
	inline const void* Get_Agent_Dominant_lastState(Agent* self) { return &((Agent_Dominant*)self)->_Get_Property_<PROPERTY_TYPE_Agent_Dominant_lastState, DriveState >(); };

	inline void Set_Agent_Dominant_m5Gstate(Agent* self, DriveState value) { ((Agent_Dominant*)self)->m5Gstate = value; };
	inline const void* Get_Agent_Dominant_m5Gstate(Agent* self) { return &((Agent_Dominant*)self)->m5Gstate; };

	inline void Set_Agent_Dominant_min_collision_time(Agent* self, double value) { ((Agent_Dominant*)self)->min_collision_time = value; };
	inline const void* Get_Agent_Dominant_min_collision_time(Agent* self) { return &((Agent_Dominant*)self)->min_collision_time; };

	inline void Set_Agent_Dominant_planConfig(Agent* self, PlanConfig value) { ((Agent_Dominant*)self)->planConfig = value; };
	inline const void* Get_Agent_Dominant_planConfig(Agent* self) { return &((Agent_Dominant*)self)->planConfig; };

	inline void Set_Agent_Dominant_systemStatus(Agent* self, System_Status value) { ((Agent_Dominant*)self)->_Get_Property_<PROPERTY_TYPE_Agent_Dominant_systemStatus, System_Status >() = value; };
	inline const void* Get_Agent_Dominant_systemStatus(Agent* self) { return &((Agent_Dominant*)self)->_Get_Property_<PROPERTY_TYPE_Agent_Dominant_systemStatus, System_Status >(); };

	inline behaviac::EBTStatus FunctionPointer_Agent_Dominant_Action(Agent* self) { return ((Agent_Dominant*)self)->Action(); }
	inline behaviac::EBTStatus FunctionPointer_Agent_Dominant_Avoidance(Agent* self) { return ((Agent_Dominant*)self)->Avoidance(); }
	inline behaviac::EBTStatus FunctionPointer_Agent_Dominant_ChangingLane(Agent* self) { return ((Agent_Dominant*)self)->ChangingLane(); }
	inline bool FunctionPointer_Agent_Dominant_collision_time_feasibleforchange(Agent* self) { return ((Agent_Dominant*)self)->collision_time_feasibleforchange(); }
	inline behaviac::EBTStatus FunctionPointer_Agent_Dominant_Estop(Agent* self) { return ((Agent_Dominant*)self)->Estop(); }
	inline void FunctionPointer_Agent_Dominant_find_5G_EstopSpeed(Agent* self) { ((Agent_Dominant*)self)->find_5G_EstopSpeed(); }
	inline bool FunctionPointer_Agent_Dominant_find_5G_FollowingPath(Agent* self) { return ((Agent_Dominant*)self)->find_5G_FollowingPath(); }
	inline void FunctionPointer_Agent_Dominant_find_5G_FollowingSpeed(Agent* self) { ((Agent_Dominant*)self)->find_5G_FollowingSpeed(); }
	inline bool FunctionPointer_Agent_Dominant_find_advice_speed(Agent* self) { return ((Agent_Dominant*)self)->find_advice_speed(); }
	inline bool FunctionPointer_Agent_Dominant_find_change_path(Agent* self) { return ((Agent_Dominant*)self)->find_change_path(); }
	inline behaviac::EBTStatus FunctionPointer_Agent_Dominant_FollowingFrontCar(Agent* self) { return ((Agent_Dominant*)self)->FollowingFrontCar(); }
	inline void FunctionPointer_Agent_Dominant_HandleFrame(Agent* self) { ((Agent_Dominant*)self)->HandleFrame(); }
	inline bool FunctionPointer_Agent_Dominant_I_need_to_changelane(Agent* self) { return ((Agent_Dominant*)self)->I_need_to_changelane(); }
	inline bool FunctionPointer_Agent_Dominant_I_want_to_changlane(Agent* self) { return ((Agent_Dominant*)self)->I_want_to_changlane(); }
	inline bool FunctionPointer_Agent_Dominant_Im_able_to_changelane(Agent* self) { return ((Agent_Dominant*)self)->Im_able_to_changelane(); }
	inline bool FunctionPointer_Agent_Dominant_is_5G_Event(Agent* self) { return ((Agent_Dominant*)self)->is_5G_Event(); }
	inline bool FunctionPointer_Agent_Dominant_is_5G_Front_Car(Agent* self) { return ((Agent_Dominant*)self)->is_5G_Front_Car(); }
	inline bool FunctionPointer_Agent_Dominant_is_change_finished(Agent* self) { return ((Agent_Dominant*)self)->is_change_finished(); }
	inline bool FunctionPointer_Agent_Dominant_is_other_lane(Agent* self) { return ((Agent_Dominant*)self)->is_other_lane(); }
	inline bool FunctionPointer_Agent_Dominant_is_other_lane_free(Agent* self) { return ((Agent_Dominant*)self)->is_other_lane_free(); }
	inline bool FunctionPointer_Agent_Dominant_is_speed_lower_than(Agent* self, double spd) { return ((Agent_Dominant*)self)->is_speed_lower_than(spd); }
	inline bool FunctionPointer_Agent_Dominant_is_stopline_close(Agent* self) { return ((Agent_Dominant*)self)->is_stopline_close(); }
	inline bool FunctionPointer_Agent_Dominant_is_traffice_red(Agent* self) { return ((Agent_Dominant*)self)->is_traffice_red(); }
	inline bool FunctionPointer_Agent_Dominant_isEstop(Agent* self) { return ((Agent_Dominant*)self)->isEstop(); }
	inline bool FunctionPointer_Agent_Dominant_isPathRunout(Agent* self, double dis_set) { return ((Agent_Dominant*)self)->isPathRunout(dis_set); }
	inline void FunctionPointer_Agent_Dominant_LogMessage(char* param0) { Agent_Dominant::LogMessage(param0); }
	inline behaviac::EBTStatus FunctionPointer_Agent_Dominant_Move(Agent* self) { return ((Agent_Dominant*)self)->Move(); }
	inline bool FunctionPointer_Agent_Dominant_no_collision_or_collision_far_away(Agent* self) { return ((Agent_Dominant*)self)->no_collision_or_collision_far_away(); }
	inline System_Status FunctionPointer_Agent_Dominant_System_Check(Agent* self) { return ((Agent_Dominant*)self)->System_Check(); }
	inline behaviac::EBTStatus FunctionPointer_Agent_Dominant_Tracking(Agent* self) { return ((Agent_Dominant*)self)->Tracking(); }
	inline behaviac::EBTStatus FunctionPointer_Agent_Dominant_TrackingLane(Agent* self) { return ((Agent_Dominant*)self)->TrackingLane(); }
	inline void Set_Static_Object_type_(Agent* self, Object_Type value) { ((Static_Object*)self)->type_ = value; };
	inline const void* Get_Static_Object_type_(Agent* self) { return &((Static_Object*)self)->type_; };

	inline void Set_Static_Object_length(Agent* self, double value) { ((Static_Object*)self)->length = value; };
	inline const void* Get_Static_Object_length(Agent* self) { return &((Static_Object*)self)->length; };

	inline void Set_Static_Object_width(Agent* self, double value) { ((Static_Object*)self)->width = value; };
	inline const void* Get_Static_Object_width(Agent* self) { return &((Static_Object*)self)->width; };

	inline void Set_Static_Object_hight(Agent* self, double value) { ((Static_Object*)self)->hight = value; };
	inline const void* Get_Static_Object_hight(Agent* self) { return &((Static_Object*)self)->hight; };

	inline void Set_Static_Object_x(Agent* self, double value) { ((Static_Object*)self)->x = value; };
	inline const void* Get_Static_Object_x(Agent* self) { return &((Static_Object*)self)->x; };

	inline void Set_Static_Object_y(Agent* self, double value) { ((Static_Object*)self)->y = value; };
	inline const void* Get_Static_Object_y(Agent* self) { return &((Static_Object*)self)->y; };

	inline void Set_Moving_Object_vx(Agent* self, double value) { ((Moving_Object*)self)->vx = value; };
	inline const void* Get_Moving_Object_vx(Agent* self) { return &((Moving_Object*)self)->vx; };

	inline void Set_Moving_Object_vy(Agent* self, double value) { ((Moving_Object*)self)->vy = value; };
	inline const void* Get_Moving_Object_vy(Agent* self) { return &((Moving_Object*)self)->vy; };

	inline void Set_Moving_Object_relative_vx(Agent* self, double value) { ((Moving_Object*)self)->relative_vx = value; };
	inline const void* Get_Moving_Object_relative_vx(Agent* self) { return &((Moving_Object*)self)->relative_vx; };

	inline void Set_Moving_Object_relative_vy(Agent* self, double value) { ((Moving_Object*)self)->relative_vy = value; };
	inline const void* Get_Moving_Object_relative_vy(Agent* self) { return &((Moving_Object*)self)->relative_vy; };

	inline void Set_Goal_x(Agent* self, double value) { ((Goal*)self)->x = value; };
	inline const void* Get_Goal_x(Agent* self) { return &((Goal*)self)->x; };

	inline void Set_Goal_y(Agent* self, double value) { ((Goal*)self)->y = value; };
	inline const void* Get_Goal_y(Agent* self) { return &((Goal*)self)->y; };

	inline void Set_Goal_theta(Agent* self, double value) { ((Goal*)self)->theta = value; };
	inline const void* Get_Goal_theta(Agent* self) { return &((Goal*)self)->theta; };

	inline void Set_Plan_Frame_mapFlag(Agent* self, MAPFlags value) { ((Plan_Frame*)self)->mapFlag = value; };
	inline const void* Get_Plan_Frame_mapFlag(Agent* self) { return &((Plan_Frame*)self)->mapFlag; };

	inline void Set_Plan_Frame_min_distance_to_global_route(Agent* self, double value) { ((Plan_Frame*)self)->min_distance_to_global_route = value; };
	inline const void* Get_Plan_Frame_min_distance_to_global_route(Agent* self) { return &((Plan_Frame*)self)->min_distance_to_global_route; };

	inline void Set_Plan_Frame_planned_dis_remain(Agent* self, double value) { ((Plan_Frame*)self)->planned_dis_remain = value; };
	inline const void* Get_Plan_Frame_planned_dis_remain(Agent* self) { return &((Plan_Frame*)self)->planned_dis_remain; };

	inline void Set_Plan_Frame_currentSpeed_ms(Agent* self, double value) { ((Plan_Frame*)self)->currentSpeed_ms = value; };
	inline const void* Get_Plan_Frame_currentSpeed_ms(Agent* self) { return &((Plan_Frame*)self)->currentSpeed_ms; };

	inline void Set_Plan_Frame_currentSteer_deg(Agent* self, double value) { ((Plan_Frame*)self)->currentSteer_deg = value; };
	inline const void* Get_Plan_Frame_currentSteer_deg(Agent* self) { return &((Plan_Frame*)self)->currentSteer_deg; };

	inline void Set_Plan_Frame_static_obj(Agent* self, behaviac::vector<Static_Object> value) { ((Plan_Frame*)self)->static_obj = value; };
	inline const void* Get_Plan_Frame_static_obj(Agent* self) { return &((Plan_Frame*)self)->static_obj; };

	inline void Set_Plan_Frame_moving_obj(Agent* self, behaviac::vector<Moving_Object> value) { ((Plan_Frame*)self)->moving_obj = value; };
	inline const void* Get_Plan_Frame_moving_obj(Agent* self) { return &((Plan_Frame*)self)->moving_obj; };

	inline void Set_Plan_Frame_nearObs(Agent* self, behaviac::vector<Dominator::Point2D> value) { ((Plan_Frame*)self)->nearObs = value; };
	inline const void* Get_Plan_Frame_nearObs(Agent* self) { return &((Plan_Frame*)self)->nearObs; };

	inline void Set_Plan_Frame_global_route(Agent* self, behaviac::vector<Dominator::Point2D> value) { ((Plan_Frame*)self)->global_route = value; };
	inline const void* Get_Plan_Frame_global_route(Agent* self) { return &((Plan_Frame*)self)->global_route; };

	inline void Set_Plan_Frame_history_path(Agent* self, behaviac::vector<Dominator::Point2D> value) { ((Plan_Frame*)self)->history_path = value; };
	inline const void* Get_Plan_Frame_history_path(Agent* self) { return &((Plan_Frame*)self)->history_path; };

	inline void Set_Plan_Frame_predict_path(Agent* self, behaviac::vector<Dominator::Point2D> value) { ((Plan_Frame*)self)->predict_path = value; };
	inline const void* Get_Plan_Frame_predict_path(Agent* self) { return &((Plan_Frame*)self)->predict_path; };

	inline void Set_Plan_Frame_route_goal(Agent* self, Goal* value) { ((Plan_Frame*)self)->route_goal = value; };
	inline const void* Get_Plan_Frame_route_goal(Agent* self) { return &((Plan_Frame*)self)->route_goal; };

	inline void Set_Plan_Frame_lane_goal(Agent* self, Goal* value) { ((Plan_Frame*)self)->lane_goal = value; };
	inline const void* Get_Plan_Frame_lane_goal(Agent* self) { return &((Plan_Frame*)self)->lane_goal; };

	inline void Set_Dominator_Point2D_x(Agent* self, double value) { ((Dominator::Point2D*)self)->x = value; };
	inline const void* Get_Dominator_Point2D_x(Agent* self) { return &((Dominator::Point2D*)self)->x; };

	inline void Set_Dominator_Point2D_y(Agent* self, double value) { ((Dominator::Point2D*)self)->y = value; };
	inline const void* Get_Dominator_Point2D_y(Agent* self) { return &((Dominator::Point2D*)self)->y; };

	inline void Set_PlanConfig_frequency(Agent* self, int value) { ((PlanConfig*)self)->frequency = value; };
	inline const void* Get_PlanConfig_frequency(Agent* self) { return &((PlanConfig*)self)->frequency; };

	inline void Set_PlanConfig_log_level(Agent* self, int value) { ((PlanConfig*)self)->log_level = value; };
	inline const void* Get_PlanConfig_log_level(Agent* self) { return &((PlanConfig*)self)->log_level; };

	inline void Set_PlanConfig_plannner_type(Agent* self, int value) { ((PlanConfig*)self)->plannner_type = value; };
	inline const void* Get_PlanConfig_plannner_type(Agent* self) { return &((PlanConfig*)self)->plannner_type; };

	inline void Set_PlanConfig_enable_avoidance(Agent* self, int value) { ((PlanConfig*)self)->enable_avoidance = value; };
	inline const void* Get_PlanConfig_enable_avoidance(Agent* self) { return &((PlanConfig*)self)->enable_avoidance; };

	inline void Set_PlanConfig_V_width_half(Agent* self, double value) { ((PlanConfig*)self)->V_width_half = value; };
	inline const void* Get_PlanConfig_V_width_half(Agent* self) { return &((PlanConfig*)self)->V_width_half; };

	inline void Set_PlanConfig_V_front(Agent* self, double value) { ((PlanConfig*)self)->V_front = value; };
	inline const void* Get_PlanConfig_V_front(Agent* self) { return &((PlanConfig*)self)->V_front; };

	inline void Set_PlanConfig_V_back(Agent* self, double value) { ((PlanConfig*)self)->V_back = value; };
	inline const void* Get_PlanConfig_V_back(Agent* self) { return &((PlanConfig*)self)->V_back; };

	inline void Set_PlanConfig_lat_safe_margin(Agent* self, double value) { ((PlanConfig*)self)->lat_safe_margin = value; };
	inline const void* Get_PlanConfig_lat_safe_margin(Agent* self) { return &((PlanConfig*)self)->lat_safe_margin; };

	inline void Set_PlanConfig_lon_safe_margin(Agent* self, double value) { ((PlanConfig*)self)->lon_safe_margin = value; };
	inline const void* Get_PlanConfig_lon_safe_margin(Agent* self) { return &((PlanConfig*)self)->lon_safe_margin; };

	inline void Set_PlanConfig_min_speed_threshold(Agent* self, double value) { ((PlanConfig*)self)->min_speed_threshold = value; };
	inline const void* Get_PlanConfig_min_speed_threshold(Agent* self) { return &((PlanConfig*)self)->min_speed_threshold; };

	inline void Set_PlanConfig_static_safe_front(Agent* self, double value) { ((PlanConfig*)self)->static_safe_front = value; };
	inline const void* Get_PlanConfig_static_safe_front(Agent* self) { return &((PlanConfig*)self)->static_safe_front; };

	inline void Set_PlanConfig_static_safe_back(Agent* self, double value) { ((PlanConfig*)self)->static_safe_back = value; };
	inline const void* Get_PlanConfig_static_safe_back(Agent* self) { return &((PlanConfig*)self)->static_safe_back; };

	inline void Set_PlanConfig_static_safe_side(Agent* self, double value) { ((PlanConfig*)self)->static_safe_side = value; };
	inline const void* Get_PlanConfig_static_safe_side(Agent* self) { return &((PlanConfig*)self)->static_safe_side; };

	inline void Set_PlanConfig_predict_time_interval(Agent* self, double value) { ((PlanConfig*)self)->predict_time_interval = value; };
	inline const void* Get_PlanConfig_predict_time_interval(Agent* self) { return &((PlanConfig*)self)->predict_time_interval; };

	inline void Set_PlanConfig_predict_num(Agent* self, int value) { ((PlanConfig*)self)->predict_num = value; };
	inline const void* Get_PlanConfig_predict_num(Agent* self) { return &((PlanConfig*)self)->predict_num; };

	inline void Set_PlanConfig_expected_time(Agent* self, double value) { ((PlanConfig*)self)->expected_time = value; };
	inline const void* Get_PlanConfig_expected_time(Agent* self) { return &((PlanConfig*)self)->expected_time; };

	inline void Set_PlanConfig_max_acceleration(Agent* self, double value) { ((PlanConfig*)self)->max_acceleration = value; };
	inline const void* Get_PlanConfig_max_acceleration(Agent* self) { return &((PlanConfig*)self)->max_acceleration; };

	inline void Set_PlanConfig_axis_dis(Agent* self, double value) { ((PlanConfig*)self)->axis_dis = value; };
	inline const void* Get_PlanConfig_axis_dis(Agent* self) { return &((PlanConfig*)self)->axis_dis; };

	inline void Set_PlanConfig_tyre_to_steer(Agent* self, double value) { ((PlanConfig*)self)->tyre_to_steer = value; };
	inline const void* Get_PlanConfig_tyre_to_steer(Agent* self) { return &((PlanConfig*)self)->tyre_to_steer; };

	inline void Set_PlanConfig_tyre_to_steer_right(Agent* self, double value) { ((PlanConfig*)self)->tyre_to_steer_right = value; };
	inline const void* Get_PlanConfig_tyre_to_steer_right(Agent* self) { return &((PlanConfig*)self)->tyre_to_steer_right; };

	inline void Set_PlanConfig_display_enabled(Agent* self, int value) { ((PlanConfig*)self)->display_enabled = value; };
	inline const void* Get_PlanConfig_display_enabled(Agent* self) { return &((PlanConfig*)self)->display_enabled; };

	inline void Set_PlanConfig_myID(Agent* self, int value) { ((PlanConfig*)self)->myID = value; };
	inline const void* Get_PlanConfig_myID(Agent* self) { return &((PlanConfig*)self)->myID; };

	inline void Set_PlanConfig_follow_dis(Agent* self, double value) { ((PlanConfig*)self)->follow_dis = value; };
	inline const void* Get_PlanConfig_follow_dis(Agent* self) { return &((PlanConfig*)self)->follow_dis; };

}
#endif // _BEHAVIAC_AGENT_PROPERTIES_H_
